// <auto-generated />
using System;
using BeltTest.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BeltTest.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20190823195836_forthmigration")]
    partial class forthmigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("BeltTest.Models.Activity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Userid");

                    b.Property<DateTime>("date");

                    b.Property<string>("desc")
                        .IsRequired();

                    b.Property<string>("duration")
                        .IsRequired();

                    b.Property<DateTime>("time");

                    b.Property<string>("title")
                        .IsRequired();

                    b.HasKey("id");

                    b.HasIndex("Userid");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("BeltTest.Models.Post", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("activityid");

                    b.Property<int>("userid");

                    b.HasKey("id");

                    b.HasIndex("activityid");

                    b.HasIndex("userid");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("BeltTest.Models.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("email")
                        .IsRequired();

                    b.Property<string>("name")
                        .IsRequired();

                    b.Property<string>("password")
                        .IsRequired();

                    b.HasKey("id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BeltTest.Models.Activity", b =>
                {
                    b.HasOne("BeltTest.Models.User", "Creator")
                        .WithMany("CreatedActivities")
                        .HasForeignKey("Userid")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BeltTest.Models.Post", b =>
                {
                    b.HasOne("BeltTest.Models.Activity", "Activity")
                        .WithMany("PostedActivities")
                        .HasForeignKey("activityid")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BeltTest.Models.User", "User")
                        .WithMany("Posts")
                        .HasForeignKey("userid")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
